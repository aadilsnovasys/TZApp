name: Build and Deploy Angular App
'on':
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.11.1
      - name: Install dependencies
        run: |
          npm install
      - name: Build Angular app
        run: |
          npm run build -- --configuration production
      - name: Archive production build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
    # Step 1: Download production build
    - name: Download production build
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: ./dist

    # Step 2: List contents of downloaded build directory (debugging)
    - name: List contents of downloaded build directory
      run: |
        Get-ChildItem -Recurse ./dist

    # Step 3: Create IIS directory for TZApp
    - name: Create IIS directory for TZApp
      run: |
        if (!(Test-Path -Path "C:\web\TZApp")) {
          New-Item -Path "C:\web\TZApp" -ItemType Directory -Force
        }

    # Step 4: Copy build files to IIS directory
    - name: Copy build files to IIS directory
      run: |
        Copy-Item -Path "./dist/TZApp/browser/*" -Destination "C:\web\TZApp" -Recurse -Force

    # Step 5: Run PowerShell script directly in YAML
    - name: Configure IIS site
      run: |
        Import-Module WebAdministration
        $siteName = 'TZApp'
        $physicalPath = 'C:\web\TZApp'
        $port = 80

        # Check if the site exists
        if (!(Get-Website | Where-Object { $_.Name -eq $siteName })) {
          Write-Host "Creating new IIS site: $siteName"
          New-Website -Name $siteName -PhysicalPath $physicalPath -Port $port -ApplicationPool 'DefaultAppPool'
        } else {
          Write-Host "IIS site $siteName already exists. Updating physical path."
          Set-ItemProperty "IIS:\Sites\$siteName" -Name physicalPath -Value $physicalPath
        }

        # Ensure the site is running
        Start-Website -Name $siteName
      shell: pwsh
